<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/context
    https://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!--导入db.properties文件-->
	<context:property-placeholder location="classpath:db.properties"/>

<!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
<!--		导入数据库驱动-->
		<property name="driverClassName" value="${jdbc.driver}"/>
<!--		连接数据库的url-->
		<property name="url" value="${jdbc.url}"/>
<!--         数据库的用户名和密码-->
        <property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
<!--		dbcp2的特性：最大连接数-->
        <property name="maxTotal" value="${jdbc.maxTotal}"/>
<!--		最大空闲数-->
         <property name="maxIdle" value="${jdbc.maxIdle}"/>
<!--		初始化连接数-->
		<property name="initialSize" value="${jdbc.initialSize}"/>
	</bean>

<!--事务管理器，依赖于数据源-->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource"  ref="dataSource"/>
	 </bean>
<!--开启事务注解-->
     <tx:annotation-driven transaction-manager="transactionManager"/>

<!--配置mybatis工厂sqlsessionfactory-->
     <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--     注入数据源-->
		 <property name="dataSource" ref="dataSource"/>
<!--   指定核心的mybatis文件-->
		 <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--如果想mapper.xml与dao不在同一文件下，配置mapper扫描-->
		 <property name="mapperLocations" value="classpath:com/su/dao/mapper/*.xml"/>
	 </bean>

<!--配置mapper扫描器-->
      <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		  <property name="basePackage" value="com.su.dao"/>
	  </bean>

<!--扫描servlect-->
<context:component-scan base-package="com.su.service"/>

</beans>
